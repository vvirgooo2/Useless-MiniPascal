重大更新，所有node放一个文件啦，不想弄编译了，多文件编译太麻烦

ParaList要带Type, 仅用于函数定义
ExprList用于函数调用

IDExpr 是一个值的节点，可以存变量名，也可以存立即数

也就是说，程序运行段最后的运算总会落到IDExpr的基本单元上

程序结构：

Program 分级:
Program
        DeclPart
            VarDeclList 
            FuncDeclList     //函数定义
                OneFuncDecl
                    FuncHead
                    FuncBody
                        DeclPart
                        ExecPart
                        returnstmt
        ExecPart
            StmtList
        

VarPart 分级：
VarPart：
    VarDeclList
        VarDecl   
            type 
            idlist
            IDExpr //initial存这里面吧
        


OneFuncDecl 分级：
    Funcdecl
        name
        Type
        ParaList
    FuncBody
        DeclPart
        ExecutePart
    returnstmt
        IDExpr   //return哪个变量或立即数


ExecutePart 分级：
    StmtList
        Stmt
            AssignStmt
                Expr
                Expr
            
            ForStmt
                ID       // 循环变量
                expr      // 结束
                expr      // 起始
                stmtlist     
            
            FuncCallStmt
                funcname  //函数名
                Exprlist  //参数
            
            RepeatStmt
                expr     //condition
                stmtList

            WhileStmt
                expr    //condition
                StmtList

            ElseStmt
                stmtList


            IfStmt
                expr   //条件
                stmtlist   //执行
                ElseStmt 
            
            BreakStmt


Expr 分级：
    Exprlist
        Expr
            BinExpr   //二元
            UnaryExpr //单目
            FunCallExpr 
                func_name
                ExprList
            ArrayExpr 
                arrayname
                Expr
            IDExpr  //一个立即数或者变量名






ps.嵌套定义函数不知道做不做，
目前不是非常支持嵌套定义，但是留下了修改的空间，
一个routine可以成为一个递归单元，但是routine目前没有存好东西，
全局的routine和函数的routine存的有参数列表
感觉有些冗余，建议删掉过程

一个pascal测试程序，ast_test建立相应语法树



/*
program test;
var
    a,b:integer ;
    c: string ;

function Testout(in:string):integer
begin
    writeln(in);
end

begin
    c='1234';
    for i:=1 to 100 do
        writeln(c);
end.
*/


